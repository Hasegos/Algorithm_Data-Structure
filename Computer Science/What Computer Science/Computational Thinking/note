처음 시작할때의 나와 비교해라


------ 2 진법 내용들 ------

컴퓨터 과학 : 단지 문제를 해결
input ->  무언가 -> output
여기서 무언가가 컴퓨터 과학
정보 자체의 표현 방법 -> 2진법 0/1 표현
10진법 -> 0 ~ 9
비트 : 0 or 1
1 byte -> 8 bit
50 : 00110010
트랜지스터 : 스위칭하는데 사용되는 반도체 소제
13 : 00001101 

------ 정보의 표현 ------

ASCII를 통해 문자를 해당 숫자로 표현하기로 약속함.
ASCII << 유니코드(32비트까지 가능)
RGB 또한 0 or 1
음악도 0 or 1

※결국 어떤 방법을 사용해서 정보를 나타내든 결국은 0 과 1로 표현된다.


50 : 110010

67
C : 1000011

83
S : 1010011

------ 알고리즘 ------

찾고자하는 범위에서 필요없는 범위들 날리고 또 날리고
즉 반을 날리고 또 반을날리는 방식 이진트리
1024
512
256
128
64
32
16
8
4
2
1

우리가 이미 가지고 있는 직관이나 생각들을 기계나 다른사람들이 이해할 수 있는 방식으로 번역

t |            n          n\2
i |           ↗          ↗
m |          ↗         ↗ 
e |         ↗        ↗
  |        ↗       ↗
t |       ↗      ↗
o |      ↗     ↗
  |     ↗    ↗
s |    ↗   ↗ 
o |   ↗  ↗           ↗   ↗   ↗ log n
l |  ↗ ↗     ↗
v | ↗↗↗ 
e |↗  
  |_________________________
      size of problem

단순히 2페이지씩 넘길 때 : 같은 문제를 해결할때 시간이 두배로 걸리는걸 알 수 있다.
범위를 반의 반으로 줄이는 방식일때 : log n 시간만큼 확 줄어드는걸 볼 수 있다.
효율에서 말이안되는 차이가 나타남

의사 코드 : 생각을 간결하게 정리한 코드와 비슷한 구문
함수 : 동사와 같다.
의사 결정을 내릴 질문은 불리언으로 표현
답은 yes / no

● function
● condtions
● Boolean expressions
● loops
● event
● ...

#include<stdio.h>

int main(void){
    printf("hello, world\n");
}

------ 스크래치 기초 ------

퍼즐 조각을 가져와 프로그래밍할 수 있는 언어

input -> algorithm -> output

1.hello, world -> sat - > hello, world

2.what's your name -> ask   and wait  -> answer

3.hello, answer -> join -> hello, David

최종 결과 : hello, Davie -> say -> 'hello, Davie'

반복문, 함수, 조건, 불리언 표현 등을 할 수 있다.

------ 스크래치 심화 ------

컴퓨터는 0부터 수를 센다

이벤트 : 프로그램끼리 주고받는 비밀 메시지
추상화 개념 : 기능을 어떻게 구현했는지 보단 행위를할 수 있는지만 신경

Quiz 1

1번 : 4비트
2번 : 101 100 119 105 116 104
3번 : 3번
4번 : 1110
5번 : 11
6번 : 트랜지스터
7번 : 의사코드
8번 : 컴파일
9번 : true
10번 : 뒷 페이지의 절반을 편다